pico-8 cartridge // http://www.pico-8.com
version 36
__lua__
--[[ 
** REMINDERS **
CONTROL +K +J = unfold all
CONTROL +K +1 = fold at level 1 
U, D, L, R, O, and X are the buttons (up, down, left, right, o-button, x-button)

Furlock Bones: Consulting Dogtective
]]

--init, update, draw and draw functions
function _init()
	debug_mode = false
	camera_x = 0
	camera_y = 0
	activeGame = false
	anim_time = 0
	anim_wait = 0.1	
	create_player()
	create_brian()	
	init_conversation_text()		
	poke(0x5f5c, 255) -- this means a held button only registers once
	readingSign = false	
	notNowBrian = false
	current_map_maximum_x = 624
	current_map_maximum_y = 248
end

function _update60()
	if activeGame == true  then 
		toggle_debug_mode()	
		animate_player()		
		move_player() -- MUST be before camera_follow_player
		camera_follow_player() -- MUST be after move_player
		conversation_system()
		move_brian()		
		check_if_next_to_sign()		
	else -- if still on menu
		if (btnp(❎)) then activeGame = true end
	end	
end

function _draw()
	cls()	
	if activeGame == false then draw_menu() end
	if activeGame == true then
		draw_game()				
		if text.active == true then draw_conversation()	end -- draw player conversations when required
	end	
	if (debug_mode == true) then		
		print("player x: "..player.x,player.x,player.y-10,8)		
		print(camera_x)
	end		
end

function camera_follow_player()
	if player.x > 60 and player.x <= (current_map_maximum_x -60) then 
		camera_x = player.x - 60
	end
	if player.y > 60 and player.y <= (current_map_maximum_y-60) then
		camera_y = player.y - 60
	end
end

function draw_menu()
	--[[ I'll have other stuff here later of course
	which is why this currently looks a bit bare! ]]
	format_text_centered(text_array, 7) -- display menu text	
end

function draw_game()
 	camera(camera_x,camera_y)
 	map(0,0,0,0,128,32)
	spr(110,80,16,1,1,1)
	spr(126,80,24,1,1,1)
 	spr(player.sprite,player.x,player.y,1,1,player.direction==-1)
	spr(brian.sprite,brian.x,brian.y,1,1,brian.direction==-1)	
end

-->8
--player functions
function create_player()
	player={}  --create empty table
	
	player.x = 464 -- map location x8 for exact pixel location
	player.y = 40
	player.direction = 1

	player.velocity_x = 0
	player.velocity_y = 0	
	player.max_x_speed = 1
	player.max_y_speed = 1	
	player.acceleration = 0.2
	player.drag = 0.7 -- 1 = no slow down, 0 = instant halt

	player.width = 7
	player.height = 7
	player.sprite = 1
end

function animate_player()
	if player.velocity_x != 0 or player.velocity_y != 0 then
		if time() - anim_time > anim_wait then
			player.sprite += 1
			anim_time = time()
			if (player.sprite > 4 ) then
				player.sprite = 1
			end
		end	
	else
		anim_time = 0
		player.sprite = 1
	end
end

function move_player()	
	
	if conversation_state != "level2" then	-- if talking then don't walk away, it's rude.
		--when the user tries to move, only add the acceleration to the current speed.
		if (btn(⬅️)) then 
			player.velocity_x -= player.acceleration
			player.direction = -1
		end
		if (btn(➡️)) then 
			player.velocity_x += player.acceleration
			player.direction = 1
		end
		if (btn(⬆️)) then 
			player.velocity_y -= player.acceleration		
		end
		if (btn(⬇️)) then 
			player.velocity_y += player.acceleration		
		end

		-- max negative speed, player direction, max positive speed
		-- So if player.direction tries to exceed max, we refer to either - or + max instead
		-- essentially we ignore what player trying to do, until speed reduces
		player.velocity_x = mid(-player.max_x_speed,player.velocity_x,player.max_x_speed)
		player.velocity_y = mid(-player.max_y_speed,player.velocity_y,player.max_y_speed)

		-- if player still moving
		if (player.velocity_x != 0) or (player.velocity_y != 0) then

			-- call check_if_next_to_wall function for collision before letting player move
			-- essentially this allows play to move diaganolly along a solid object, as without this
			-- the can_move code prevents them moving
			check_if_next_to_wall(player)

			-- check player isn't trying to move into a solid object
			if (can_move(player, player.velocity_x, player.velocity_y)) then
				--actually move the player to the new location
				player.x += player.velocity_x
				player.y += player.velocity_y
				
			-- if player cannot move there, find out how close they can get and move them there instead.
			else 
				--create temporary variables to store how far the player is trying to move
				temp_direction_x = player.velocity_x
				temp_direction_y = player.velocity_y
				
				--make tempx,tempy shorter and shorter until we find a new position the player can move to
				while (not can_move(player,temp_direction_x,temp_direction_y)) do
					
					--if x movement has been shortened so much that it's practically 0, set it to 0
					if (abs(temp_direction_x) <= 0.1) then
						temp_direction_x = 0  	
						--but if it's not too small, make it 90% of what it was before. 
						-- this shortens the amount the player is trying to move in that direction.
					else
						temp_direction_x *= 0.9
					end
					
					--do the same thing for y movement
					if (abs(temp_direction_y) <= 0.1) then
						temp_direction_y = 0
					else
						temp_direction_y *= 0.9
					end  	  	
				end

			--now we've found a distance the player can move, actually move them there
			player.x += temp_direction_x
			player.y += temp_direction_y
			end 
		end	
	end
 
	-- if the player's still moving, then slow them down just a bit using the drag amount.
	-- Note: this actually takes effect whilst player trying to move, so I think it should only be
	-- used if player not pressing a button otherwise player cant reach top speed
	if (abs(player.velocity_x) > 0) player.velocity_x *= player.drag
	if (abs(player.velocity_y) > 0) player.velocity_y *= player.drag
	
	--if they are going slow enough in a particular direction, bring them to a halt.
	if (abs(player.velocity_x)<0.02) player.velocity_x = 0
	if (abs(player.velocity_y)<0.02) player.velocity_y = 0	
end

function check_if_next_to_sign()
	if (is_sign(player, player.velocity_x, player.velocity_y)) and readingSign == false then
		conversation_state = "sign"
		readingSign = true		
	elseif not (is_sign(player, player.velocity_x, player.velocity_y)) and readingSign == true then
		readingSign = false
		conversation_state = "level0"			
		text.active = false			
	end
end

-->8
-- character functions
function create_brian()
	brian={}
	brian.x = 74
	brian.y = 24
	brian.sprite = 6
	brian.speed = 0.2
	brian.direction = -1
end

function move_brian()
	if (brian_collision(player.x,player.y,brian.x,brian.y)) == true then 
		-- this just stops Brian moving any closer and stops him pestering for a while		
	else
		-- check that Brian hasn't recently pestered player
		if notNowBrian == true then
			if (time() >= brianWaiting +20 ) then
				notNowBrian = false
			else return end
		else
			if player.x < brian.x then
				brian.x -= brian.speed
				brian.direction = -1
			end 
			if player.x > brian.x then	 	
				brian.x += brian.speed
				brian.direction = 1
			end 
			if player.y < brian.y then
				brian.y -= brian.speed
			end 
			if player.y > brian.y then
				brian.y += brian.speed
			end
		end
	end
end

function brian_collision(playerx,playery,charx,chary)
	if charx +10 > playerx and charx < playerx +10 and chary +10 > playery and chary < playery +10 then
	brian.speed = 0
  		if conversation_state == "level0" then			
			conversation_state = "level1"
			talking_to = "brian"
			notNowBrian = true
			brianWaiting = time()
		end 
	else
		if talking_to == "brian" then -- if player walks away instead of starting conversation			
			brian.speed = 0.2	 	
			conversation_state = "level0"
			talking_to = "nobody"
			text.active = false
		end
 	end
end

-->8
-- player collision functions
function check_if_next_to_wall(player)
	-- if player next to a wall stop them moving in that direction
	-- essentially this allows player to move along a wall holding two buttons. e.g. up and left
	-- what happens is that we ignore the left movement as it is set to zero meaning that we only
	-- apply the vertical movement. It's really just a player UX fix.
	-- player moving left
	if (player.velocity_x < 0) then
		--check both left corners for a wall
		local wall_top_left = solid(player.x -1, player.y)
		local wall_btm_left = solid(player.x -1, player.y + player.height)
		-- if wall in that direction, set x movement to 0
		if (wall_top_left or wall_btm_left) then
			player.velocity_x = 0
		end

	-- player moving right
	elseif (player.velocity_x > 0) then
		--check both right corners for a wall
		local wall_top_right = solid(player.x + player.width + 1, player.y)
		local wall_btm_right = solid(player.x + player.width + 1, player.y + player.height)

		--if there is a wall in that direction, set x movement to 0
		if (wall_top_right or wall_btm_right) then
			player.velocity_x = 0
		end
	end

	-- player moving up
	if (player.velocity_y < 0) then
		--check both top corners for a wall
		local wall_top_left = solid(player.x, player.y - 1)
		local wall_top_right = solid(player.x + player.width, player.y - 1)
		--if there is a wall in that direction, set y movement to 0
		if (wall_top_left or wall_top_right) then
			player.velocity_y = 0
		end

	-- player moving down
	elseif (player.velocity_y > 0) then
		--check both bottom corners for a wall
		local wall_btm_left = solid(player.x, player.y + player.height + 1)
		local wall_btm_right = solid(player.x, player.y + player.height + 1)
		--if there is a wall in that direction, set y movement to 0
		if (wall_btm_right or wall_btm_left) then
			player.velocity_y = 0
		end
	end 
end

function can_move(object,direction_x,direction_y)
	--this function takes an object (only player currently) and it's x,y speed. It uses these
	--to check the four corners of the object to see it can move into that spot. (a map tile
	--marked as solid would prevent movement into that spot.)
	-- capture x,y coords for where trying to move
	local next_left = object.x + direction_x	
	local next_right = object.x + direction_x + object.width
	local next_top = object.y + direction_y
	local next_bottom = object.y + direction_y + object.height	
	-- BUG: getting stuck on edge if moving diagonal down/left (might be in check_if_next_to_a_wall)

	-- get x,y for each corner based on where trying to move, then use solid to convert that to a 
	-- map tile location and check if any solid sprites there
	local top_left_solid = solid(next_left, next_top)
	local btm_left_solid = solid(next_left, next_bottom)
	local top_right_solid = solid(next_right, next_top)
	local btm_right_solid = solid(next_right, next_bottom)

	--if all of those locations are NOT solid, the object can move into that spot.
	-- this is why it's return NOT so we get (I think) a true returned as if all 4 are false we can move there
	return not (top_left_solid or btm_left_solid or	top_right_solid or btm_right_solid)
end

function is_sign(object,direction_x,direction_y) -- copy of can_move
	--this function takes an object (only player currently) and it's x,y speed. It uses these
	--to check the four corners of the object to see it can move into that spot. (a map tile
	--marked as solid would prevent movement into that spot.)
	-- capture x,y coords for where trying to move
	local next_left = object.x + direction_x	
	local next_right = object.x + direction_x + object.width
	local next_top = object.y + direction_y
	local next_bottom = object.y + direction_y + object.height		

	-- get x,y for each corner based on where trying to move, then use solid to convert that to a 
	-- map tile location and check if any solid sprites there
	local top_left_solid = nextToSign(next_left, next_top)
	local btm_left_solid = nextToSign(next_left, next_bottom)
	local top_right_solid = nextToSign(next_right, next_top)
	local btm_right_solid = nextToSign(next_right, next_bottom)

	--if all of those locations are NOT solid, the object can move into that spot.
	-- this is why it's return NOT so we get (I think) a true returned as if all 4 are false we can move there
	return (top_left_solid or btm_left_solid or	top_right_solid or btm_right_solid)
end

function solid(x,y)	
	--checks x,y of player/object against the map to see if sprite marked as solid
	-- divide x,y by 8 to get map coordinates
	local map_x = flr(x/8)
	local map_y = flr(y/8)	
	-- find what sprite is at that map x,y
	local map_sprite = mget(map_x,map_y) 
	-- and get what flag it has set
	local flag = fget(map_sprite) 
	return flag == 1 
end

function nextToSign(x,y)
	local map_x = flr(x/8)
	local map_y = flr(y/8)	
	local map_sprite = mget(map_x,map_y) -- find what sprite is at map x,y 
	local flag = fget(map_sprite) -- and get what flag it has set
	return flag == 128 -- I'm using the last flag (128) for signs
end

-->8
-- conversation and text functions
function conversation_system()
	-- level0 == no conversation
	-- level1 == player can choose to start conversation
	-- level2 == player now in a conversation
	if conversation_state == "level1" then
		new_conversation({"press x to talk"})
		if (btnp(❎)) then						
			conversation_state = "level2"
		end	
	elseif conversation_state == "level2" and talking_to == "brian" then				
		new_conversation({"ruff! i'm brian!"}) 		
		if (btnp(❎)) then		
			conversation_state = "level3"
		end
	elseif conversation_state == "level3" and talking_to == "brian" then		
		new_conversation({"oh really?", "a 2nd line of text","and even a third","but four is our limit!"})

	elseif conversation_state == "sign" and player.x < 120 then
		new_conversation({"press x to read sign"})
		if (btnp(❎)) then		
			conversation_state = "sign2"			
		end
	elseif conversation_state == "sign2" then
		new_conversation({"it says 'owls house this way' "})		

	elseif conversation_state == "sign" and player.x > 120 then
		new_conversation({"press x to read sign"})
		if (btnp(❎)) then		
			conversation_state = "sign3"			
		end
	elseif conversation_state == "sign3" then
		new_conversation({"'i'm very busy you know..."})
	end
end

function format_text_centered(array, colour)
	height = 50
	for i in all(array) do
		print(i,64-#i*2, height, colour)
		height += 6
	end
end

function format_text_left(array, colour)
	height = 50
	for i in all(array) do
		print(i,10, height, colour)
		height += 6
	end
end

function init_conversation_text()
	text = {} -- create empty array to store multiple strings
	text.active = false -- initialise to false
	text.string = {} -- empty array to store individual string?
	conversation_state = "level0" -- semi-related code
	talking_to = "nobody" -- semi-related code
end

function new_conversation(txt)
	text.string = txt -- enter received string(s) into array
	text.active = true
end

function draw_conversation()	
	-- currently I just draw this in the middle of the screen
	-- I want to draw it at the bottom UNLESS player y >= 188, in which case I'll draw at top of screen
	
	-- determine longest line of text
	local maxTextWidth = 0
	for i=1, #text.string do 
		if #text.string[i] > maxTextWidth then -- loop through array and find longest text element
			maxTextWidth = #text.string[i] -- set max width to longest element so box wide enough
		end
	end

	-- define textbox with border
	local textbox_x = camera_x + 64 - maxTextWidth *2 -1 -- -1 for border
	local textbox_y = 100
	local textbox_width = textbox_x+(maxTextWidth*4)  -- *4 to account for character width
	local textbox_height = textbox_y + #text.string * 6

	-- draw outer border text box
	rectfill(textbox_x-2, textbox_y-2, textbox_width+2, textbox_height+2, 0)
	rectfill(textbox_x, textbox_y, textbox_width, textbox_height, 12)

	-- write text
	for i=1, #text.string do  -- the # gets the legnth of the array 'text'
		local txt = text.string[i]
		-- local tx = textbox_x +1 -- add 1 pixel of outside of box and text
		local tx = camera_x + 64 - #txt * 2 -- centre text based on length of string txt
		local ty = textbox_y -5+(i*6) -- padding for top of box but because for loop starts at 1 we need to subtract 5		
		print(txt, tx, ty, 0)
	end
end

-- function choose_random_brian_response()
-- 	if brian_talking == false then		
-- 		choice = rnd{1,2,3,4,5}
-- 		brian_talking = true
-- 	end	
-- end

-- Brian conversation
brian_talk={}
brian_talk[1] = "woof?"
brian_talk[2] = "bark"
brian_talk[3] = "*sniff sniff*"
brian_talk[4] = "yip!"
brian_talk[5] = "whimper..."

text_array = {}
text_array[1] = "furlock bones"
text_array[2] = "the case of the lost animals"
text_array[3] = ""
text_array[4] = ""
text_array[5] = ""
text_array[6] = ""
text_array[7] = "press x to start"

other_array = {}
other_array[1] = "this"
other_array[2] = "is some other"
other_array[3] = "text"
other_array[4] = "which is"
other_array[5] = "aligned to the left"

-->8
-- back of house functions

function toggle_debug_mode()	
	if (btnp(🅾️)) and (debug_mode == false) then
		debug_mode = true	
	elseif (btnp(🅾️)) and (debug_mode == true) then
	  	debug_mode = false
	end	
end

function log(text,overwrite) -- external logging file
		printh(text, "log", overwrite)
end


__gfx__
0000000000000000000000000007000700070007888888880000000000000000c44cc44c444b444bbbbbbbccbbbbbccc55555555cccccccc555ccc7ccccccccc
000000000007000700070007000777770007777788888888000500050000000099999999444444bbbbbbbcccbbbbcccc455454457ccccc7c55cccccccccc7ccc
007007000007777700077777700717717007177188888888000444440000000044444444444444bbbbbbccccbbbccccc44444444cccccccc5ccccccccccccccc
000770007007177170071771700777e7700777e78888888850041441000000004224242444444bbbbbbbccccbbbbcccc44444444cccccccccccccccccccccc7c
00077000700777e7700777e7077668600776686088888888500444e40000000042422424444b444bbbbcccccbbbbcccc44444444cccccccccc7cccccc7cccccc
007007000776686007766860077777700777777088888888044444400000000044444444444444bbbbbbccccbbbbcccc444444445ccc7ccccccccccccccccccc
00000000077777700777777070d0070670d07060888888880444444000000000c22cc22c4444bbbbbbbbccccbbbbcccc4444444455cccccccccccc7ccccccccc
00000000171d7160171d1716011111000111110088888888141d414000000000c22cc22c4b44b4bbbbbcccccbbbbbccc44444444555ccccccccccccccccccccc
00000000bbbbbbbbbbbbb9bbbbb88bbbb44bb44bbbbbbbbb000000000000000000000000b444b444444444444444444455d5cccc44444444bbbbbbbbccccc555
00000000bbbbbbbbbbbb9bbbbb8f82bb99999999bbbbbbbb000000000000000000000000bb4444444444d44444444444455d55cc44444444bbbbbbbbcccccc55
00000000bb224444444944bbb88882bb44444444bbbbddbb000000000000000000000000bb44444444444d44444444444455555c544545545bb5b55bccc7ccc5
00000000b22229949994944b8f888e2242242424bbbd6ddb000000000000000000000000bbb444444dd444444444444444455d55555d5555555d5555cccccccc
00000000b21222244244224b8888222242422424bbd6dd5b000000000000000000000000b444b444444d44444444444444445555555d5d55555d5d55cccccccc
00000000b22124442444441bbb8222bb44444444b35dd553000000000000000000000000bb44444444444dd444444444444445555d55dd5d5d55dd5dcccccccc
00000000b12242122221223bbb3113bbb22bb22bbb35553b000000000000000000000000bbbb44444444d4444444444444444455d555d55dd555d55dc7ccccc7
000000003311111111111133b322223b32233223bbbbbbbb000000000000000000000000bb4b44b44444444444444444444444455d5555d55d5555d5cccccccc
0000000000000000000000004448844477777777111111116566656600022000bbbbbbbb44444444444444444444444400000000444444444444444444444444
000000000000000000000000448f824476666665111111115555555500022000bbbbbbbb444444444444d4444444444400000000444444444444444444444444
0000000000000000000000004888824476666665111cc111666566650acaaca0aaabbbbb4444444444444dd45445455400000000544545545445455445545445
0000000000000000000000008f888e22766666651111111155555555aaccccaaabaaaaaa44444444444d44445555555500000000555d5555555d5555555d5555
000000000000000000000000888822227666666511cc1cc165666566a0acca0aababbaba444444444dd4444455d5555500000000555d5d555555555555d55555
0000000000000000000000005582225576666665111111115555555520cccc02aaabbbbb444b444444444d44c5555555000000005d55dd5d5555555d55555d5c
0000000000000000000000005551155576666665111111116665666500333300bbbbbbbb4bbb4b444444d444c555d55500000000d555d55dd5555555555555cc
0000000000000000000000005522225555555555111111115555555500300300bbbbbbbbbbbbbbb444444444cc5555550000000055d555d555dd55d555555ccc
000000000000000000000000ccc88ccc4a4444a44a4aa4a40cccccc044444444444444444bbbbbbb000000000000000000000000000000000000000000000000
000000000000000000000000cc8f82c74a4444a405099050cccccccc444d44444444444444b4bbb4000000000000000000000000000000000000000000000000
000000000000000000000000cc8882cc4a4444a400000000cc77c77c4dd4444444444444b444b4b4000000000000000000000000000000000000000000000000
000000000000000000000000c8888e2c4a4444a400000000cc71c71c4444d4444444444444b4b444000000000000000000000000000000000000000000000000
000000000000000000000000c8f8222caaa99aaa05000050cccccccc44444dd44444444444444444000000000000000000000000000000000000000000000000
000000000000000000000000cc8222cc090990904a4444a41cccccc144d444444444444444444444000000000000000000000000000000000000000000000000
0000000000000000000000007cc11ccc4a4444a44a4444a411111111444d44444444444444444444000000000000000000000000000000000000000000000000
000000000000000000000000cc2222cc4a4444a44a4444a405400540444444444444444444444444000000000000000000000000000000000000000000000000
333bb3b133ab1333bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb4444bbbbbbbbbbbbbb33aaa333333aaa33
33331133b3113333bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbbbbbbbbbbbbbbb44999944bbbbbbbbbbbb33bab333333bab33
ab3331133133a3babbbbbdddddddbbbbbbbbbbbbbbbddbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bbbbbbbbbbbbbbb4494aaa94944bbbbbbbbbb333b13b11b31b333
aab13331333b3baabbbbdd6d666ddbbbbbbbbbbbbdd66dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbbbbbbbbbb449494aaaa444944bbbbbbbbb3a313b11b313a3b
ab13b331133311babbbddddddd66ddbbbbbbbbbbd666d55bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bbbbbbb44949444aaa949494944bbbbbbbb3b3b1331b3b3bb
33bb113113ab3333bbdddddddddd6ddbbbbbbbbd66ddd55bbbbbbbbbbbb33bbbbbbbbbbbbb3bbbbbbbbb4494949494aaaa4949444944bbbbbbb03a1bb1a30bbb
131133344311bb33bb55dddddd55dddbbbbbbbd66ddd555bbbbbbbbbb3bb3b3bb33bb3bbbbb3bbbbbb449494949494aaaa494449494944bbbbbb00b11b00bbbb
333ab31111b31133b5555ddd66dd555bbbbbbd6ddddd55bbbbbbbbbb333bb33333bb333bbbbbbbbb449494449444a444444a494949444944bbbbb000000bbbbb
33ab1333333bb3b1b55dd5d66dd5155bbbbbdddd5dd551bbbbbbbbb333333333333333333bbbbbbb2494949494a4442222444a49444949420000000000000000
b311333333331133b151dddddd55155bbbbdd6dd15555bbbbbbbbb3333333b33bb33333333bbbbbb44949494a44422111122444a494949440000000000000000
3133a3baab33311333151dddd5555133bbbdddddd1551bbbbbbbbbb333bb3bb3bb3b33b33bbbbbbb249444a444221111111122444a4944420000000000000000
333b3baaaab13331b33111555511133bb331ddd555513333bbbbb3bb333bbbbbbbbbbbb3bb3bbbbb2494a4442211112222111122444a49420000000000000000
133311baab13b331bb333311113333bbbb333111111333bbbbbbb33b3bbbbbbbbbbbbb33b33bbbbb24a44422111122222222111122444a420000000000000000
13ab333333bb1131bbbb33333333bbbbbbbb33333333bbbbbbbbbbb33bbbbbbbbbbbbbb33bbbbbbb244422111122222442222211112244420000000000000000
4311bb3313113334bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333bbbbbbbbbbbbb3333bbbbbb242211112222244444422222111122420000000000000000
11b31133333ab311bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333bbbbbbbbbbb3333bbbbbbb211111222224444444444222221111120000000000000000
bbbbb333333bbbbbbbbbbbbb0000000033333333bbbbbbb3bbbbbbb3333bbbbbbbbbbb333bbbbbbb11111222244444444444444222211111bbb33bbb00000000
bbbb33333333bbbbbbbbbbbb000000003b333333bbbbbb33bbbbbb333bbbbbbbbbbbbbb333bbbbbbb112122444111144444111444221211bbb31b3bb00000000
bbb3a3baab333bbbbbbbddbb0000000033bb3333bbbbbb3bbbbbbb3b33bbbbbbbbbbbb33b3bbbbbbbb1221444111111444111114441221bbb33b331b00000000
bb3b3baaaab133bbbbbd6ddb0000000033333b33bbbbbbbbbbbbbbbb333bbbbbbbbbb333bbbbbbbbb312242241111114441111142242213bb13aa33b00000000
b33311baab13b33bbbd6dd5b00000000333bb333bbbbbbb3bbbbbbb333bbbbbbbbbbbbb33bbbbbbbb311244441111914441111144442113b33b5ab3300000000
33ab333333bb1133b35dd55300000000333333b3bbbbbb33bbbbbb333bbbb33b3bbbbb3333bbbbbb3312124441111414442222244421213b313bb31100000000
3b11bb33131133b3bb35553b000000003bb33b33bbbbbbb3bbbbbbb333b3bb3b3b3b3b333bbbbbbb3331142241111114444444442241133b13bb1b3100000000
31b31133333ab313bbbbbbbb0000000033333333bbbbbbbbbbbbbbbb3333333333333333bbbbbbbbb333311441111114424224244113333b3113b33100000000
131bb3b133ab1131bbbbbbbb3333333333333333bbbbbbbbbbbbbbbb333bb333b33bb333b44bb44b333bb3b133ab1344443bb3b133ab13331b33311100000000
b1111133b311311bbbbdddbb3333333333333333bbbbb3bbbb3bbbbbb3bb3b3bbb33bb3b9999999933331133b311449999441133b311333311b3bb1100000000
bb11b113313311bbbbdd6ddb3333333333333b33bb333bbbbbb333bbbbb33bbbbbbbbbbb44444444ab333113314494aaa94944133133a3ba3133331300000000
bbb1113133111bbbbdddd5db33333333333bbb33b33333bbbb33333bbbbbbbbbbbbbbbbb42242424aab13331449494aaaa444944333b3baab311113b00000000
bbb3111111113bbbb5d5555b3333333333bbbbb3b333333bb333333bbbbbbbbbbbbbbbbb42422424ab13b344949444aaa9494949443311babb3223bb00000000
bb314211112413bb335111333333333333bbb333bb3333bbbb3333bbbbbbbbbbbbbbbbbb4444444433bb4494949494aaaa49494449443333bb1442bb00000000
b31421244212413bbb3333bb3333333333333333bbbb3bbbbbb3bbbbbbbbbbbbbbbbbbbbb22bb22b13449494949494aaaa494449494944333143441300000000
bb331441144133bbbbbbbbbb3333333333333333bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb32233223449494449444a444444a494949444944b333133b00000000
ccccc333333ccccc333bb3b133ab1333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccc33333333cccc33331133b3113333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ccc3a3baab333cccab3331133133a3ba000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cc3b3baaaab133ccaab13331333b3baa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c33311baab13b33cab13b331133311ba000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33ab333333bb113333bb113113ab3333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b11bb33131133b3131133344311bb33000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
31b31133333ab313333ab31111b31133000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
131bb3b11b3bb13133ab1333333bb3b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c11111333311111cb311333333331133000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cc11b113311b11cc3133a3baab333113000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ccc111b11b111ccc333b3baaaab13331000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccc11133111cccc133311baab13b331000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ccccdd1111ddcccc13ab333333bb1131000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccc6d5dd5d6cccc4311bb3313113334000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccc26555566cccc11b31133333ab311000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccc26566562cccc33aaa333333aaa33000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccc62555566cccc33bab333333bab33000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccc66566526cccc333b13b11b31b333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccc62555566ccccc3a313b11b313a3c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccc66566562cccccc3b3b1331b3b3cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccc26555526ccccccc13a1bb1a31ccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccc66566566cccccccc11b11b11cccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccc66555566ccccccccc111111ccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55556256652655550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
54546655556645450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44442656656244440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44446655552644440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44442656656244440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44466255556664440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44626156651626440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
46261651156162640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
65666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
66656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
65666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
66656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
65666566333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334365666566
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
66656665334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333366656665
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
65666566333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334365666566
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
66656665334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333366656665
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
65666566333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334365666566
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
66656665334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333366656665
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
65666566333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334365666566
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
66656665334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333366656665
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
65666566333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334365666566
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
66656665334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333366656665
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
65666566333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334365666566
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
66656665334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333366656665
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
65666566333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334365666566
5555555533333cccccc3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
666566653343cccccccc333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333366656665
555555553333cc77c77c333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
656665663333cc71c71c334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334365666566
555555553333cccccccc333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
6665666533431cccccc1333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333366656665
55555555333311111111333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
65666566333335433543334377777777777777777777777777777777333333433333334377777777777777777777777777777777333333433333334365666566
55555555333333333333333376666665766666657666666576666665333333333333333376666665766666657666666576666665333333333333333355555555
66656665334333333343333376666665766666657666666576666665334333333343333376666665766666657666666576666665334333333343333366656665
55555555333333333333333376666665766666657666666576666665333333333333333376666665766666657666666576666665333333333333333355555555
65666566333333433333334376666665766666657666666576666665333333433333334376666665766666657666666576666665333333433333334365666566
55555555333333333333333376666665766666657666666576666665333333333333333376666665766666657666666576666665333333333333333355555555
66656665334333333343333376666665766666657666666576666665334333333343333376666665766666657666666576666665334333333343333366656665
55555555333333333333333355555555555555555555555555555555333333333333333355555555555555555555555555555555333333333333333355555555
65666566333333433333334377777777111111111111111177777777333333433333334377777777111111111111111177777777333333433333334365666566
55555555333333333333333376666665111111111111111176666665333333333333333376666665111111111111111176666665333333333333333355555555
66656665334333333343333376666665111cc111111cc11176666665334333333343333376666665111cc111111cc11176666665334333333343333366656665
55555555333333333333333376666665111111111111111176666665333333333333333376666665111111111111111176666665333333333333333355555555
6566656633333343333333437666666511cc1cc111cc1cc17666666533333343333333437666666511cc1cc111cc1cc176666665333333433333334365666566
55555555333333333333333376666665111111111111111176666665333333333333333376666665111111111111111176666665333333333333333355555555
66656665334333333343333376666665111111111111111176666665334333333343333376666665111111111111111176666665334333333343333366656665
55555555333333333333333355555555111111111111111155555555333333333333333355555555111111111111111155555555333333333333333355555555
65666566333333433333334377777777111111111111111177777777333333433333334377777777111111111111111177777777333333433333334365666566
55555555333333333333333376666665111111111111111176666665333333333333333376666665111111111111111176666665333333333333333355555555
66656665334333333343333376666665111cc111111cc11176666665334333333343333376666665111cc111111cc11176666665334333333343333366656665
55555555333333333333333376666665111111111111111176666665333333333333333376666665111111111111111176666665333333333333333355555555
6566656633333343333333437666666511cc1cc111cc1cc17666666533333343333333437666666511cc1cc111cc1cc176666665333333433333334365666566
55555555333333333333333376666665111111111111111176666665333333333333333376666665111111111111111176666665333333333333333355555555
66656665334333333343333376666665111111111111111176666665334333333343333376666665111111111111111176666665334333333343333366656665
55555555333333333333333355555555111111111111111155555555333333333333333355555555111111111111111155555555333333333333333355555555
65666566333333433333334377777777111111111111111177777777333333433333334377777777111111111111111177777777333333433333334365666566
55555555333333333333333376666665111111111111111176666665333333333333333376666665111111111111111176666665333333333333333355555555
66656665334333333343333376666665111cc111111cc11176666665334333333343333376666665111cc111111cc11176666665334333333343333366656665
55555555333333333333333376666665111111111111111176666665333333333333333376666665111111111111111176666665333333333333333355555555
6566656633333343333333437666666511cc1cc111cc1cc17666666533333343333333437666666511cc1cc111cc1cc176666665333333433333334365666566
55555555333333333333333376666665111111111111111176666665333333333333333376666665111111111111111176666665333333333333333355555555
66656665334333333343333376666665111111111111111176666665334333333343333376666665111111111111111176666665334333333343333366656665
55555555333333333333333355555555111111111111111155555555333333333333333355555555111111111111111155555555333333333333333355555555
65666566333333433333334377777777111111111111111177777777333333433333334377777777111111111111111177777777333333433333334365666566
55555555333333333333333376666665111111111111111176666665333333333333333376666665111111111111111176666665333333333333333355555555
66656665334333333343333376666665111cc111111cc11176666665334333333343333376666665111cc111111cc11176666665334333333343333366656665
55555555333333333333333376666665111111111111111176666665333333333333333376666665111111111111111176666665333333333333333355555555
6566656633333343333333437666666511cc1cc111cc1cc17666666533333343333333437666666511cc1cc111cc1cc176666665333333433333334365666566
55555555333333333333333376666665111111111111111176666665333333333333333376666665111111111111111176666665333333333333333355555555
66656665334333333343333376666665111111111111111176666665334333333343333376666665111111111111111176666665334333333343333366656665
55555555333333333333333355555555111111111111111155555555333333333333333355555555111111111111111155555555333333333333333355555555
65666566333333433333334377777777777777777777777777777777333333433333334377777777777777777777777777777777333333433333334365666566
55555555333333333333333376666665766666657666666576666665333333333333333376666665766666657666666576666665333333333333333355555555
66656665334333333343333376666665766666657666666576666665334333333343333376666665766666657666666576666665334333333343333366656665
55555555333333333333333376666665766666657666666576666665333333333333333376666665766666657666666576666665333333333333333355555555
65666566333333433333334376666665766666657666666576666665333333433333334376666665766666657666666576666665333333433333334365666566
55555555333333333333333376666665766666657666666576666665333333333333333376666665766666657666666576666665333333333333333355555555
66656665334333333343333376666665766666657666666576666665334333333343333376666665766666657666666576666665334333333343333366656665
55555555333333333333333355555555555555555555555555555555333333333333333355555555555555555555555555555555333333333333333355555555
65666566333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334365666566
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
66656665334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333366656665
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
65666566333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334365666566
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
66656665334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333366656665
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
65666566333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334365666566
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
66656665334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333366656665
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
65666566333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334365666566
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
66656665334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333366656665
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
65666566333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334365666566
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
66656665334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333366656665
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
65666566333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334365666566
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
66656665334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333366656665
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
65666566333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334365666566
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
66656665334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333366656665
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
65666566333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334365666566
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
66656665334333333343333333433333334333333343333333433333334333333343333333433333334333333343333333433333334333333343333366656665
55555555333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355555555
65666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
66656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
65666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
66656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665666566656665
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555

__gff__
0000000000000200800000000000010100010101800000000100000000000001000100000101010000000000010000000001000100000000000000000000000000000101000000010100000000000101000001010000000000000000000000010101000000000000000000000000010001010000000000000000000000000100
0101000001000001010100000000000001010000010000010101000000000000010101010100000001010000000000000101010001010000010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
262626262626262626262626262626262626262626262626262626262626262626262626262626260f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f80810f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
264946606146464646464646464615242449156e6e6e6e6e4646464646464946464946464646460a0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f808283810f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
264646707160614946464646464614242424247e7e7e7e7e1446494646464646461546464946140b330f330f330f330f330f330f0f0f0f0f0f0f0fa29293a30f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
264646464670714646464646464646464646464915464619373838383838383838383838393838380c0c0c0c0c0c0c0c0c0c0c0c0c1c0d0f0f0f0f0f90910f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
266061464646464646467646464646464649464646464619381a3838381a382937383838383837381b371b1b1b1b2a1b1b1b1b1b1b1b1c0d0f080f0fa0a10f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
267071724646464646464646494646242424246e6e6e6e6e154646464646464946464646464642432b1b1b1b1b1b1b1b1b1b1b1b1b1b1b0c0c0c1c0da0a10f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
264646466246464646464646464646242446467e7e7e7e7e464646154646464646464646464652531f2b232d232d232e232e232d2d1b371b1b1b1b0cb0b11c0d0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
264646606146494646494646464646242449462424462446464646464646464646464646464646260f0f0f0f0f0f0f0f0f0f0f0f1f2b2e2e2d2e2e2e2d2d2f0e0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
264646704161464646464646464646242424242424462446464646464646464646464649464646260f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
264646605171464646464946464646242424464646462446464646464646464646464646464646260f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
266061707146467549464646464646464646464646464646464646464646464646464646464646260f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2670714646464646494646464946464646464646464946464946464646464646464646464646462600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2646464646464646464646464646462424464646464646464646464946464646464646464646462600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2646464646464646464646464646462424464646464646464946464646464646464646464646462600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2646464646464646424346494646462424464646464646464646464646464646464646464646462600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2646464646464646525346464646462424464646464649464646464646494646494646464649462600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2646464646464646464946464646462424464646464646464646464949464646464646494646462600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2646494646464646464646464646494646464646464646464646464646464646494646464646462600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2646464646464646464646464646464946464646464646464646464646464646464646464646462600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2646464646464646464646464646464646464646464946464946464646464946464646464646492600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2646464646464646464646464646464646464646464646494646464646464649464646464646462600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2646464646464646464646464646464646464646464646464646464649464646464646464646462600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2646464646464646464646464646464646464646464646464646464646464646464646464646462600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2646464646464646464646464646464646494646494646464646494646464646464646464946462600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2649464646464646242424242449464646464646464646494646464646464649464646464646462600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2624244646464646242446462446464646464646494646464646464646464646464646464646462600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2624464646464646464646462446464646464646464646464646464646464646464646464646462600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2624464646464646242424242446464646464946464646464649464649464646464646464649462600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2624464646464646244646464646464646464646464646494646464646464649464646464649462600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2624242424242424244646464646464646464646464646464646464649464646464646464646462600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2646464646464646464646464646464646464646464646464646464646464646464646464646462600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2626262626262626262626262626262626262626262626262626262626262626262626262626262626262600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
0006000007550095501d500205001b5001f5000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500
